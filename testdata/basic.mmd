Title:      PygBlog MMD metadata test
Author:     Steinar Vittersø Kaldager
Comment:    This file tests basic features of the
            multimarkdown language as parsed by the
            pygblog MMD engine.
Tags:       simple test
            tags
            go here and can go on multiple lines
Visible:    yes
Encoding-Note: These files should always be UTF-8.

Main header
===========

Decorating text
---------------

Text can be _italic_ or **bold**.
We can also render things in `monospace`.

Single linebreaks are usually ignored.
This is conventionally just to accommodate a beautiful, readable plaintext
markdown version of the document.
However, given that we're going to be putting everything in `git`, we could
also use it to put each sentence on a separate line, which would improve
diffing.

You can include any international characters you like, as long as
everything is encoded in UTF-8: Æ Ø Å, æ ø å, Göteborg, naïveté.

Lists
-----

* Item A
* Item B
* Item C

1. Ordered item A
2. Ordered item B
    * Nested Item B.A
    * Nested Item B.B

### Deep subheader

You can always write the subheaders with only # characters prefixed.

Links
-----

[Links](http://www.google.com) are done like this. There is no need to
write the [target] of the link inline, as you can resolve it afterwards.
If you [forget to resolve] the target of the link, it is renderd like that.

[target]: http://www.wikipedia.org

Tables
------

Animal                                   |      Sound | Lucky number |
-----------------------------------------|------------|-------------:|
Otter                                    | ???        |          135 |
Cat                                      | mjau       |          437 |
Dog                                      | bark       |          983 |
Snubnosed eel (_simenchelys parasitica_) | ???        |         1358 |
[Table of animals]

These elements are optional:

* The table caption
* The column name row
* The column grouping (the first line)

The line full of dashes is _not_ optional.

Lining up the pipe characters is not strictly necessary, but of course it's
essential if we want the markdown to look nice.

Unfortunately, despite the superficial similarities, these are **not** `org`
tables, and `C-c C-c` in Emacs `org-mode` will mess them up. Maybe there's
another module to handle MMD, and/or one could be made?

Quotes
------

> The use of COBOL cripples the mind; its teaching should, therefore, be
> regarded as a criminal offense.

[Edsger Dijkstra] was fairly grumpy but witty.

[Edsger Dijkstra]: http://www.wikipedia.org/wiki/Edsger_Dijkstra

> Oh no, they say he's got to go  
> Go go Godzilla, yeah  
> Oh no, there goes Tokyo  
> Go go Godzilla, yeah 

When quoting lyrics or poetry, use this fairly magical markdown syntax:
_two spaces_ ending a line indicates that the line break should be
rendered to the output document. Alternately, with a special option
passed to multimarkdown, you can end the line with a backslash. This
may be better, as carrying semantics in invisible elements of the text
seems crazy (although I understand that the intention was to preserve
readability in the markdown text itself.

Code blocks
-----------

```python
def factorial(n):
    import operator
    return reduce(operator.mul, xrange(2,n+1), 1)
```

That was some Python code.

Here's an interaction on the REPL:

```python
>>> def factorial(n):
...   import operator
...   return reduce(operator.mul, xrange(2,n+1), 1)
... 
>>> factorial(5)
120
>>> factorial(10)
```

That actually looks _great_, which is nice to know.

How about some command-line snippets?

```
svk@hahn:~/dev/pygblog$ . env/bin/activate
(env)svk@hahn:~/dev/pygblog$ pip freeze
argparse==1.2.1
pystache==0.5.4
web.py==0.37
wsgiref==0.1.2
(env)svk@hahn:~/dev/pygblog$ deactivate 
svk@hahn:~/dev/pygblog$ 
```

That doesn't necessarily look awesome, but I suppose it'll do.

`highlight.js` can be configured with its own CSS styles to customize the
appearance of the highlighted code blocks.
